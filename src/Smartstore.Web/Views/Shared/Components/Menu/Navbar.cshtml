@using Smartstore.Web.Rendering.Menus
@using Smartstore.Collections
@using Smartstore.Core.Content.Menus
@using Microsoft.AspNetCore.Mvc.ViewFeatures

@model MenuModel

@{
    var root = Model.Root;
    if (root == null)
    {
        return;
    }

    var renderMoreItem = false;
    var rtl = WorkContext.WorkingLanguage.Rtl;
    var hasIcons = root.Children.Any(x => x.Value.Icon.HasValue());
    var hasImages = root.Children.Any(x => x.Value.ImageUrl.HasValue());
    var isFirst = true;
}

@functions {
    private string GetCssClassForNode(TreeNode<MenuItem> node, NodePathState state)
    {
        var liClasses = new List<string>();

        liClasses.Add("nav-item");

        if (node.Depth <= 1 && node.HasChildren)
        {
            liClasses.Add(node.Depth > 0 ? "dropdown-submenu" : "dropdown");
        }

        if ((state & NodePathState.Expanded) == NodePathState.Expanded)
        {
            liClasses.Add("expanded");
        }

        if ((state & NodePathState.Selected) == NodePathState.Selected)
        {
            liClasses.Add("selected");
        }

        return liClasses.Count > 0 ? string.Join(" ", liClasses) : null;
    }
}

<div class="cms-menu cms-menu-navbar" data-menu-name="@(Model.Name?.ToLower())">
    <div class="megamenu-nav megamenu-nav--prev @(rtl ? "omega" : "alpha")">
        <a href="#" class="megamenu-nav-btn btn btn-icon"><i class="far fa-chevron-left"></i></a>
    </div>

    <ul class="navbar-nav flex-row flex-nowrap" id="menu-main">

        @foreach (var node in root.Children)
        {
            var item = node.Value;
            if (!item.Visible || node.GetMetadata<bool>("spare", false))
            {
                if (node.GetMetadata<bool>("spare", false))
                {
                    renderMoreItem = true;
                }
                continue;
            }

            var itemState = node.GetNodePathState(Model.Path);
            var isMegaMenuActive = node.GetMetadata<bool?>("IsMegaMenuActive", false);
            var isDropDownActive = (isMegaMenuActive == null ? true : (bool)isMegaMenuActive) && node.HasChildren;
            var itemText = node.GetItemText(T);
            var itemUrl = item.GenerateUrl(this.ViewContext);

            if (item.IsGroupHeader)
            {
                if (!isFirst)
                {
                    <li><hr /></li>
                }
                if (itemText.HasValue() && item.Text != "[SKIP]")
                {
                    <li class="menu-header h4 mt-2">@itemText</li>
                }
                isFirst = false;
                continue;
            }

            var attrs = new AttributeDictionary();
            attrs.AddRange(item.HtmlAttributes);
            attrs.PrependCssClass(GetCssClassForNode(node, itemState));
            var linkAttrs = new AttributeDictionary();
            linkAttrs.AddRange(item.LinkHtmlAttributes);
            linkAttrs.PrependCssClass("nav-link menu-link" + (isDropDownActive ? " dropdown-toggle" : ""));

            if (isDropDownActive)
            {
                linkAttrs["aria-expanded"] = "false";
                linkAttrs["data-target"] = "#dropdown-menu-{0}".FormatInvariant(item.Id);
            }

            <li id="main-nav-item-@item.Id" data-id="@item.Id" attrs="attrs">
                <a href="@itemUrl" attrs="linkAttrs">
                    @if (item.Icon.HasValue())
                    {
                        <i class="@item.Icon"></i>
                    }
                    else if (item.ImageUrl.HasValue())
                    {
                        <img class="sm-icon" src="@Url.Content(item.ImageUrl)" alt="" />
                    }
                    <span sm-language-attributes-for="item">@itemText</span>
                </a>
                @if (item.BadgeText.HasValue())
                {
                    <label class="badge badge-@(((BadgeStyle)item.BadgeStyle).ToString().ToLower())" attrs="item.BadgeHtmlAttributes">
                        @item.BadgeText
                    </label>
                }
            </li>

            isFirst = false;
        }

        @if (renderMoreItem)
        {
            <li class="nav-item dropdown" data-id="-1">
                <a href="#" class="nav-link dropdown-toggle" aria-expanded="false" data-target="#dropdown-menu--1">
                    @T("CatalogMenu.MoreLink")
                </a>
            </li>
        }
    </ul>

    <div class="megamenu-nav megamenu-nav--next @(rtl ? "alpha" : "omega")">
        <a href="#" class="megamenu-nav-btn btn btn-icon"><i class="far fa-chevron-right"></i></a>
    </div>
</div>